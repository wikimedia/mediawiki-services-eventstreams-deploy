swagger: '2.0'
info:
  version: 0.0.2
  title: Wikimedia EventStreams
  description: Streaming Wikimedia event data over HTTP SSE / EventSource
  termsOfService: https://wikimediafoundation.org/wiki/Terms_of_Use
  license:
    name: Apache2
    url: http://www.apache.org/licenses/LICENSE-2.0
externalDocs:
  url: https://wikitech.wikimedia.org/wiki/EventStreams

definitions:
  Last-Event-ID:
    name: Last-Event-ID
    in: header
    description: >
      Specifies the Kafka topics, partitions and offsets from which to begin
      streaming. You may not specify topics that are not configured
      to be part of this stream endpoint.
      Example: [{topic: datacenter1.topic, partition: 0, offset: 12345}, ...]
    type: array



paths:
  # NOTE:  Each /v2/stream/ route here is configured from the app config.yaml streams
  # config object that specifies which topics that belong to each streams.

<% for stream_name, stream_config in streams.iteritems() %>
  /v2/stream/<%= stream_name %>:
    get:
      tags:
        - Streams
<% for key, val in stream_config.iteritems() %>
<% if val is string %>
      <%= key %>: <%= '"' + val + '"' %>
<% else %>
      <%= key %>: <%= val %>
<% endif %>
<% endfor %>
      parameters:
        - "$ref": "#/definitions/Last-Event-ID"
      produces:
        - text/event-stream; charset=utf-8

<% endfor -%>

  # from routes/info.js
  /_info:
    get:
      tags:
        - Service information
      description: Gets information about the service
      produces:
        - application/json
      x-amples:
        - title: retrieve service info
          request: {}
          response:
            status: 200
            headers:
              content-type: application/json
            body:
              name: /.+/
              description: /.+/
              version: /.+/
              home: /.+/
  /_info/name:
    get:
      tags:
        - Service information
      description: Gets the name of the service
      produces:
        - application/json
      x-amples:
        - title: retrieve service name
          request: {}
          response:
            status: 200
            headers:
              content-type: application/json
            body:
              name: /.+/
  /_info/version:
    get:
      tags:
        - Service information
      description: Gets the running version of the service
      produces:
        - application/json
      x-amples:
        - title: retrieve service version
          request: {}
          response:
            status: 200
            headers:
              content-type: application/json
            body:
              version: /.+/

