openapi: 3.0.0
info:
  version: 0.2.0
  title: Wikimedia EventStreams
  description: Streaming Wikimedia event data over HTTP SSE / EventSource
  termsOfService: https://wikimediafoundation.org/wiki/Terms_of_Use
  license:
    name: Apache2
    url: http://www.apache.org/licenses/LICENSE-2.0
externalDocs:
  url: https://wikitech.wikimedia.org/wiki/EventStreams

definitions:
  Last-Event-ID:
    name: Last-Event-ID
    in: header
    description: >
      Specifies the Kafka topics, partitions and offsets from which to begin
      streaming. You may not specify topics that are not configured
      to be part of this stream endpoint.
      Example: [{topic: datacenter1.topic, partition: 0, offset: 12345}, ...]
    type: array
  since:
    name: since
    in: query
    description: >
      If given, this timestamp will be used as the historical starting position in
      each the requested streams. since should either be an integer UTC milliseconds
      unix epoch timestamp, or a string timestamp parseable by Date.parse().
      If the timestamp given does not have any corresponding offsets, it will be ignored,
      and the data will begin streaming from the latest position in the stream.
      This parameter is ignored if Last-Event-ID is set with offsets (or timestamps)
      for individual topic partition assignments, e.g. when resuming after a disconnect.
      NOTE: Historical timestamp assignment is not supported indefinitely. Depending
      on backend stream configuration, will likely be only one or a few weeks.



paths:
  # NOTE:  Each /v2/stream/ route here is configured from the app config.yaml streams
  # config object that specifies which topics that belong to each streams.

  /v2/stream/{streams}:
    get:
      tags:
        - Streams
      summary: Subscribe to one or multiple streams.
      description: >
        Use this route to subscribe to a comma separated list of configured streams.
      parameters:
        - "$ref": "#/definitions/Last-Event-ID"
        - "$ref": "#/definitions/since"
      produces:
        - text/event-stream; charset=utf-8

<% for stream_name, stream_config in streams.iteritems() %>
  /v2/stream/<%= stream_name %>:
    get:
      tags:
        - Streams
<% for key, val in stream_config.iteritems() %>
<% if val is string %>
      <%= key %>: <%= '"' + val + '"' %>
<% else %>
      <%= key %>: <%= val %>
<% endif %>
<% endfor %>
      parameters:
        - "$ref": "#/definitions/Last-Event-ID"
        - "$ref": "#/definitions/since"
      produces:
        - text/event-stream; charset=utf-8

<% endfor -%>

  # from routes/info.js
  /_info:
    get:
      tags:
        - Service information
      description: Gets information about the service
      produces:
        - application/json
      x-amples:
        - title: retrieve service info
          request: {}
          response:
            status: 200
            headers:
              content-type: application/json
            body:
              name: /.+/
              description: /.+/
              version: /.+/
              home: /.+/
  /_info/name:
    get:
      tags:
        - Service information
      description: Gets the name of the service
      produces:
        - application/json
      x-amples:
        - title: retrieve service name
          request: {}
          response:
            status: 200
            headers:
              content-type: application/json
            body:
              name: /.+/
  /_info/version:
    get:
      tags:
        - Service information
      description: Gets the running version of the service
      produces:
        - application/json
      x-amples:
        - title: retrieve service version
          request: {}
          response:
            status: 200
            headers:
              content-type: application/json
            body:
              version: /.+/

